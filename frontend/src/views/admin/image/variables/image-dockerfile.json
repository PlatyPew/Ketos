{
  "response": "ADD file:960fd469d48cf79ba14bbda71f3192074ed860c112e30e0bc92bff3440cb45ab in /\nCMD [\"/bin/sh\"]\nENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LANG=C.UTF-8\nRUN  apk add --no-cache   ca-certificates   tzdata  ;\nENV GPG_KEY=A035C8C19219BA821ECEA86B64E628F8D684696D\nENV PYTHON_VERSION=3.10.7\nRUN   apk add --no-cache --virtual .build-deps   gnupg   tar   xz     bluez-dev   bzip2-dev   dpkg-dev dpkg   expat-dev   findutils   gcc   gdbm-dev   libc-dev   libffi-dev   libnsl-dev   libtirpc-dev   linux-headers   make   ncurses-dev   openssl-dev   pax-utils   readline-dev   sqlite-dev   tcl-dev   tk   tk-dev   util-linux-dev   xz-dev   zlib-dev  ;   wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\";  wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\";  GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;  gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\";  gpg --batch --verify python.tar.xz.asc python.tar.xz;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -rf \"$GNUPGHOME\" python.tar.xz.asc;  mkdir -p /usr/src/python;  tar --extract --directory /usr/src/python --strip-components=1 --file python.tar.xz;  rm python.tar.xz;   cd /usr/src/python;  gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\";  ./configure   --build=\"$gnuArch\"   --enable-loadable-sqlite-extensions   --enable-optimizations   --enable-option-checking=fatal   --enable-shared   --with-lto   --with-system-expat   --without-ensurepip  ;  nproc=\"$(nproc)\";  make -j \"$nproc\"   EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\"   LDFLAGS=\"-Wl,--strip-all\"  ;  make install;   cd /;  rm -rf /usr/src/python;   find /usr/local -depth   \\(    \\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\)    -o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name 'libpython*.a' \\) \\)   \\) -exec rm -rf '{}' +  ;   find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'   | tr ',' '\\n'   | sort -u   | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'   | xargs -rt apk add --no-network --virtual .python-rundeps  ;  apk del --no-network .build-deps;   python3 --version\nRUN  for src in idle3 pydoc3 python3 python3-config; do   dst=\"$(echo \"$src\" | tr -d 3)\";   [ -s \"/usr/local/bin/$src\" ];   [ ! -e \"/usr/local/bin/$dst\" ];   ln -svT \"$src\" \"/usr/local/bin/$dst\";  done\nENV PYTHON_PIP_VERSION=22.2.2\nENV PYTHON_SETUPTOOLS_VERSION=63.2.0\nENV PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py\nENV PYTHON_GET_PIP_SHA256=5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4\nRUN   wget -O get-pip.py \"$PYTHON_GET_PIP_URL\";  echo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum -c -;   export PYTHONDONTWRITEBYTECODE=1;   python get-pip.py   --disable-pip-version-check   --no-cache-dir   --no-compile   \"pip==$PYTHON_PIP_VERSION\"   \"setuptools==$PYTHON_SETUPTOOLS_VERSION\"  ;  rm -f get-pip.py;   pip --version\nCMD [\"python3\"]\nRUN /bin/sh -c adduser -S helper -G users # buildkit\nUSER helper\nWORKDIR /home/helper\nCOPY ./index.html /home/helper # buildkit\nEXPOSE map[8000/tcp:{}]\nCMD [\"python3\" \"-m\" \"http.server\"]"
}